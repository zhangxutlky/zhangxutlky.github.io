<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Bartman's Cave]]></title>
  <subtitle><![CDATA[my cyber blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.ibartman.com/"/>
  <updated>2015-07-07T03:16:20.617Z</updated>
  <id>http://www.ibartman.com/</id>
  
  <author>
    <name><![CDATA[Shane]]></name>
    <email><![CDATA[zxlntlky@live.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[ubuntu安装pptpd来架设VPN服务器]]></title>
    <link href="http://www.ibartman.com/2015/07/06/ubuntu%E5%AE%89%E8%A3%85pptpd%E6%9D%A5%E6%9E%B6%E8%AE%BEVPN%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.ibartman.com/2015/07/06/ubuntu安装pptpd来架设VPN服务器/</id>
    <published>2015-07-06T22:17:03.000Z</published>
    <updated>2015-07-06T22:55:49.000Z</updated>
    <content type="html"><![CDATA[<p>转载文章，原链接：<br><a href="http://www.cnblogs.com/youlechang123/archive/2011/09/29/2195013.html" target="_blank" rel="external">http://www.cnblogs.com/youlechang123/archive/2011/09/29/2195013.html</a></p>
<p>以下是原文：</p>
<a id="more"></a>

<p>Linux下的VPN服务器软件主要是pptpd和openvpn,pptpd架设好后在windows下建个VPN连接就可以fan墙了，比较简单，这里说下ubuntu下安装配置pptpd。首先安装pptpd这个VPN服务器软件，ssh连接登录后用下面这个命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt-get install pptpd</div></pre></td></tr></table></figure>

<p>安装好了在webmin的网络这一栏里就可以看到pptp vpn server这项了。<br>安装完了需要对相关文件进行配置修改，用webmin上的文件管理或ssh端用vi命令修改都行。</p>
<h1 id="第一步：">第一步：</h1>
<ul>
<li>方法一：ssh连接修改/etc/pptpd.conf这个文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/pptpd.conf</div></pre></td></tr></table></figure>

<p>找到#localip 192.168.0.1和#remoteip 192.168.0.234-238,192.168.0.245这两行，把前面的#号去掉，然后保存就行了。<br>这里，localip 是 VPN 链接成功后服务器的 ip 地址， remoteip 则是客户端的可分配 ip 地址范围。下面是我的配置：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor"># (Recommended)</span></div><div class="line">localip <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></div><div class="line">remoteip <span class="number">192.168</span><span class="number">.0</span><span class="number">.234</span>-<span class="number">238</span>,<span class="number">192.168</span><span class="number">.0</span><span class="number">.245</span></div><div class="line"></div><div class="line"><span class="preprocessor"># or</span></div><div class="line"><span class="preprocessor">#localip 192.168.0.234-238,192.168.0.245</span></div><div class="line"><span class="preprocessor">#localip 192.168.0.234-238,192.168.0.245</span></div><div class="line"><span class="preprocessor">#remoteip 192.168.1.234-238,192.168.1.245</span></div></pre></td></tr></table></figure>

<ul>
<li>方法二：用webmin的pptpd服务器项修改，点击webmin网络&gt;PPTP VPN Server&gt;PPTP Server Options,加上localip和romoteip就行了，如下图<br><img src="https://lh3.googleusercontent.com/YI4iUNa7ubR1fhjiJFVnLjp2xuAs-1i_Ch7BN6vvnw=w1031-h394-no" alt=""></li>
</ul>
<h1 id="第二步：">第二步：</h1>
<p>然后再要编辑/etc/ppp/pptpd-options这个文件,为vpn指定DNS服务器, 你可以找到你服务器用的DNS服务器地址，或者直接使用Google Public DNS：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/ppp/pptpd-options</div></pre></td></tr></table></figure>

<p>找到ms-dns这项，去掉前面的#号，修改成google提供的DNS，很好记哈</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ms-dns 8.8.8.8</div><div class="line">ms-dns 8.8.4.4</div></pre></td></tr></table></figure>

<p>修改好后保存。</p>
<h1 id="第三步：">第三步：</h1>
<p>接下来建立vpn账号和密码了，可以直接在webmin的pptp vpn server选项里修改，修改文件也行。</p>
<ul>
<li><p>方法一：点击webmin里的网络&gt;PPTP VPN Server&gt;PPP Accounts&gt;Create new PPP account，就可以创建新的账号和密码了。<br><img src="https://lh3.googleusercontent.com/EylTtC66hEJ1xg27Tq5g0QL_Mw5yzJ_07Jj7PZaiKw=w731-h301-no" alt=""><br>webmin创建VPN账号</p>
</li>
<li><p>方法二：修改/etc/ppp/chap-secrets文件，按一行四列添加账号、服务器名、密码和IP限制。即第一列是用户名，第二列是服务器名（默认写pptpd 即可，注意与 pptpd-options 文件保持一致），第三列是密码，第四列是 IP 限制（不做限制用 * ）。如创建一个名为test，密码为123，不限制登录IP的VPN账号：</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test pptpd <span class="number">123</span> *</div></pre></td></tr></table></figure>

<p>修改好后保存行了。<br>最后重启pptpd服务，就可以生效了。<br>到了这一步，正常的话在XP里建立个VPN连接应该可以连接上了，但还不能访问外网，还需要另外的配置。但是如果连接不上VPN服务器的话，那就是碰上传说中的人品问题了，我就碰到过，明明所有步骤都做了，但是就是不能连接上，然后就胡乱折腾，看运气什么时候能折腾好了。</p>
<h1 id="第四步：">第四步：</h1>
<p>修改/etc/sysctl.conf 这个文件，把ipv4 forward开启，方法是找到/etc/sysctl.conf这个文件里的这一行#net.ipv4.ip_forward=1后，去掉net.ipv4.ip_forward=1前面的#号，使他生效，然后保存，运行命令sysctl –p.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@s:~<span class="comment"># sysctl -p</span></div></pre></td></tr></table></figure>

<p>运行命令后会显示这样的一行，那就表示修改生效了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net.ipv4.ip_forward = <span class="number">1</span></div></pre></td></tr></table></figure>

<p>这样，vpn 服务器就算是搭建成功了。<br>重启pptpd后如果还不能访问外网，那么就要再来一步。</p>
<h1 id="第五步：">第五步：</h1>
<p>使用iptables建立一个NAT, 用下面的命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install iptables （如果已经安装iptables，这一步就不用了）</div><div class="line">iptables -t nat -A POSTROUTING <span class="operator">-s</span> <span class="number">192.168</span>.<span class="number">0.0</span>/<span class="number">24</span> -o eth0 -j MASQUERADE</div></pre></td></tr></table></figure>

<p>上面的24表示子网掩码，代表24个1.<br>OK，到了这一步就应该可以用VPN了哈。如果不能，我也不知是哪里出问题了。<br>如果要防止重启服务器后iptables丢失，先运行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iptables-save &gt; /etc/iptables-rules</div></pre></td></tr></table></figure>

<p>然后修改/etc/network/interfaces 文件，在eth0 下面加入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pre-up iptables-restore &lt; /etc/iptables-rules</div></pre></td></tr></table></figure>

<p>这样，服务器重启后，就能自动挂载规则了。<br>好了，有了VPN，墙再高也不怕了哈。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>转载文章，原链接：<br><a href="http://www.cnblogs.com/youlechang123/archive/2011/09/29/2195013.html" target="_blank" rel="external">http://www.cnblogs.com/youlechang123/archive/2011/09/29/2195013.html</a></p>
<p>以下是原文：</p>
]]>
    
    </summary>
    
      <category term="VPN" scheme="http://www.ibartman.com/tags/VPN/"/>
    
      <category term="翻墙" scheme="http://www.ibartman.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="networking" scheme="http://www.ibartman.com/categories/networking/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一个VPN的漏洞, 可以泄漏用户真实的IP]]></title>
    <link href="http://www.ibartman.com/2015/02/10/%E4%B8%80%E4%B8%AAVPN%E7%9A%84%E6%BC%8F%E6%B4%9E-%E5%8F%AF%E4%BB%A5%E6%B3%84%E6%BC%8F%E7%94%A8%E6%88%B7%E7%9C%9F%E5%AE%9E%E7%9A%84IP/"/>
    <id>http://www.ibartman.com/2015/02/10/一个VPN的漏洞-可以泄漏用户真实的IP/</id>
    <published>2015-02-10T18:59:26.000Z</published>
    <updated>2015-07-07T03:09:30.000Z</updated>
    <content type="html"><![CDATA[<p>许多人用VPN来绕过区域的限制. 当连接到VPN后,通常你的IP地址会显示为exit server 的IP, 而不是你真正的IP. 但是最近的一个关于WebRTC (Web Real Time Communication) 安全漏洞, 使得用户真实的IP被泄漏即使用户使用VPN.<br>WebRTC 内建于大多数浏览器, 所有使用网页的应用也受到影响. 政府可以利用这个漏洞查看用户的真实IP地址.这个漏洞是被 <a href="https://daylightpirates.org/" target="_blank" rel="external">Daniel Roesler</a> 发现, 具体信息在 <a href="https://github.com/diafygi/webrtc-ips" target="_blank" rel="external">Git Hub</a>.</p>
<p>查看自己的VPN是否受到影响:<br>用<a href="http://whatismyipaddress.com/" target="_blank" rel="external">what is my ip address</a> 分别查看登录VPN之前和之后自己的IP地址.</p>
<p>简单的解决办法:</p>
<ul>
<li>chrome: 安装<a href="https://chrome.google.com/webstore/detail/scriptsafe/oiigbmnaadbkfbmpbfijlflahbdbdgdf?hl=en" target="_blank" rel="external">ScriptSafe</a> 插件</li>
<li>firefox: 在Mozilla插件里禁用WebRTC, 或者打开浏览器输入 ‘about:cofig’ 找到 ‘media.peerconnection.enabled’, 设置为 false</li>
</ul>
<p>更好的方法:<br>在自己家的路由上设置VPN,这样可以保护所有自家的设备.<br>进入router的 admin 页面, 找到security或者conncetion的选项,不同的router可能会有区别, 找到VPN的设置,然后输入自己VPN的信息即可. 如果没有找到相关的设置, 可以去VPN那里查询支持的router型号.如果使用的是open source的firmware, 可以参考下面的 <a href="http://lifehacker.com/how-to-supercharge-your-router-with-dd-wrt-508138224" target="_blank" rel="external">教程</a></p>
<p><a href="http://lifehacker.com/how-to-see-if-your-vpn-is-leaking-your-ip-address-and-1685180082" target="_blank" rel="external">原文</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>许多人用VPN来绕过区域的限制. 当连接到VPN后,通常你的IP地址会显示为exit server 的IP, 而不是你真正的IP. 但是最近的一个关于WebRTC (Web Real Time Communication) 安全漏洞, 使得用户真实的IP被泄漏即使用户使用V]]>
    </summary>
    
      <category term="VPN" scheme="http://www.ibartman.com/tags/VPN/"/>
    
      <category term="networking" scheme="http://www.ibartman.com/categories/networking/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[how to make guacamole]]></title>
    <link href="http://www.ibartman.com/2015/02/03/how-to-make-guacamole/"/>
    <id>http://www.ibartman.com/2015/02/03/how-to-make-guacamole/</id>
    <published>2015-02-03T17:56:08.000Z</published>
    <updated>2015-07-07T02:54:10.000Z</updated>
    <content type="html"><![CDATA[<p>Guacamole是一种以牛油果为主料的酱,一般搭配墨西哥玉米片来吃,味道非常清新爽口,制作也很简单.</p>
<a id="more"></a>

<p><img src="https://lh4.googleusercontent.com/-Fqxz-qofA68/VNELU9bzR5I/AAAAAAAAAEg/DxcqGiFdD4c/w968-h505-no/Screenshot%2Bfrom%2B2015-02-03%2B10%3A54%3A05.png" alt=""></p>
<p><img src="https://lh3.googleusercontent.com/-Y9KVZLpZe_Y/VNELEAZcyYI/AAAAAAAAAEU/okYhE_-hVlk/w1354-h863-no/My-Favorite-Guacamole-Recipe-Key-Ingredients.jpg" alt=""></p>
<ul>
<li><p>Preparation:<br>Step 1: Completely slice the avocado in the middle (around the seed).<br>Step 2: Swivel/split apart the avocado into two halves.<br>Step 3: Remove and save the seed for later.<br>Step 4: With a spoon, completely scoop out the insides of the avocado.<br>Step 5: Place avocado insides into the preparation bowl (For smooth guacamole, try using a food processor. For chunky guacamole, mash with fork by hand.).<br>Step 6: Add desired ingredients (lime/lemon juice, salt/pepper, cilantro/basil, red/white onion, jalapeños, chili/cayenne, tomatoes).<br>Step 7: Mix/Process to desired texture.</p>
</li>
<li><p>Preservation:<br>Method 1: Place avocado seed in guacamole, directly place plastic wrap onto the guacamole (The plastic wrap should be touching the surface of the guacamole), then refrigerate.<br>Method 2: Completely seal guacamole in an airtight container and place in the freezer (will need to thaw) or refrigerator.</p>
</li>
</ul>
<p>— source: wiki</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Guacamole是一种以牛油果为主料的酱,一般搭配墨西哥玉米片来吃,味道非常清新爽口,制作也很简单.</p>
]]>
    
    </summary>
    
      <category term="墨西哥菜" scheme="http://www.ibartman.com/tags/%E5%A2%A8%E8%A5%BF%E5%93%A5%E8%8F%9C/"/>
    
      <category term="美食" scheme="http://www.ibartman.com/categories/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[新疆大盘鸡的做法]]></title>
    <link href="http://www.ibartman.com/2015/02/02/%E5%A4%A7%E7%9B%98%E9%B8%A1%E7%9A%84%E5%81%9A%E6%B3%95/"/>
    <id>http://www.ibartman.com/2015/02/02/大盘鸡的做法/</id>
    <published>2015-02-03T05:48:51.000Z</published>
    <updated>2015-07-07T02:54:08.000Z</updated>
    <content type="html"><![CDATA[<p>新疆大盘鸡（5-6人份）<br><a id="more"></a></p>
<p><img src="https://lh3.googleusercontent.com/-k9zE3kvnpVo/VMcLMqEKPHI/AAAAAAAAAD4/yg_NQOYGEZg/w600-h800-no/1.jpg" alt=""><br>（5-6人份）大盘鸡—-主料：鸡琵琶腿7-8只，斩件。土豆两个、紫色洋葱一个、圆青椒两个。大葱两根，切段。姜，切片。<br><img src="https://lh5.googleusercontent.com/-GUGfOP2WVuY/VMcLH1x2BxI/AAAAAAAAACg/woUAYvYuwdo/w720-h480-no/2.jpg" alt=""><br>辅料：八角（大料）两枚、花椒适量、香叶两片、红干辣椒适量。</p>
<p><img src="https://lh6.googleusercontent.com/-aPn2_gWflsE/VMcLJHcqQKI/AAAAAAAAADw/-Q8vGCXw-PA/w720-h480-no/3.jpg" alt=""><br>必备调料：郫县豆瓣。</p>
<p><img src="https://lh6.googleusercontent.com/-8PMELH4Wk_Q/VMcLJ3LdbXI/AAAAAAAAADs/YUzuaooqR6U/w720-h480-no/4.jpg" alt=""><br>必备调料：啤酒。</p>
<p><img src="https://lh3.googleusercontent.com/-j9OeXo4Q-Hc/VMcLKMvZ_3I/AAAAAAAAADQ/cA6aTDeGQy0/w720-h480-no/5.jpg" alt=""><br>锅中入油，烧制5成热，放入葱段、姜片、大料、花椒、香叶、红干辣椒炒香。</p>
<p><img src="https://lh5.googleusercontent.com/-lKKbTS8OZcg/VMcLKkNXw2I/AAAAAAAAADk/r00XBrkIYag/w720-h480-no/6.jpg" alt=""><br>炒出香味后，放入郫县豆瓣，炒出红油。</p>
<p><img src="https://lh4.googleusercontent.com/-RNj0q3NI6Gg/VMcLK3DTBXI/AAAAAAAAADc/N_2hv1zkYJo/w720-h480-no/7.jpg" alt=""><br>之后放入与郫县豆瓣等量的面酱，继续大火滑炒，直到锅中酱料变稠，炒出香味。</p>
<p><img src="https://lh5.googleusercontent.com/-pjUaeYIXDH4/VMcLLNd_-8I/AAAAAAAAADg/qCV7Qpv3oMs/w720-h480-no/8.jpg" alt=""><br>放入事先准备的鸡块。</p>
<p><img src="https://lh3.googleusercontent.com/-_KPf9A3On4o/VMcLLXpC4OI/AAAAAAAAADo/gjt98WfSzEA/w720-h480-no/9.jpg" alt=""><br>将锅中酱料与鸡块用大火翻炒均匀。</p>
<p><img src="https://lh4.googleusercontent.com/-UTpZE1mkqhU/VMcLFbOdHyI/AAAAAAAAAC4/uEUL557-UFA/w720-h480-no/10.jpg" alt=""><br>将鸡块炒至变色，肉质基本紧缩，倒入准备好的啤酒，啤酒的量以没过锅中鸡块为最合适。</p>
<p><img src="https://lh5.googleusercontent.com/-TE_g1_3_0SA/VMcLFZCyb1I/AAAAAAAAACo/-KiS7aajSno/w720-h480-no/11.jpg" alt=""><br>将啤酒烧开后，打去锅边浮沫，加入老抽调色。</p>
<p><img src="https://lh4.googleusercontent.com/--_KrARj6CIU/VMcLF3cTJTI/AAAAAAAAACk/getI2GPGSf0/w720-h480-no/12.jpg" alt=""><br>根据口味加入白糖、盐、鸡精调味。</p>
<p><img src="https://lh4.googleusercontent.com/-turL5cdlAh8/VMcLGH5-MqI/AAAAAAAAABs/HCAmXdkCbYM/w720-h480-no/13.jpg" alt=""><br>最后放入切好的土豆。</p>
<p><img src="https://lh6.googleusercontent.com/-hWQyzFlNaeg/VMcLGcO3E9I/AAAAAAAAAB8/SADIKuLRn24/w720-h480-no/14.jpg" alt=""><br>放入土豆之后，用大火将汤汁烧开，盖上锅盖，改中小火，焖炖20分钟以上，直至鸡肉酥烂，土豆软糯。</p>
<p><img src="https://lh6.googleusercontent.com/-Ah9wPNHJfC0/VMcLGSeXZPI/AAAAAAAAAB4/TKe538wfnUY/w720-h480-no/15.jpg" alt=""><br>把准备好的宽面条（皮带面、拉条子）铺在大盘中备用。</p>
<p><img src="https://lh6.googleusercontent.com/-qBTmZ43F_oQ/VMcLGyQpJBI/AAAAAAAAACU/eWpffxcg6kc/w720-h480-no/16.jpg" alt=""><br>另起一锅，入油烧至八成热，放入切好的青椒片与洋葱片，炒熟。</p>
<p><img src="https://lh4.googleusercontent.com/-qeepQWrgNi4/VMcLHPIGI2I/AAAAAAAAACE/F-M8_-q4mds/w720-h480-no/17.jpg" alt=""></p>
<p><img src="https://lh3.googleusercontent.com/-uOdYepAucH4/VMcLHX_0jqI/AAAAAAAAACY/cW09XT6FoYw/w720-h480-no/18.jpg" alt=""><br>将炒熟的青椒片与洋葱片倒入鸡块锅中。</p>
<p><img src="https://lh6.googleusercontent.com/-oT2xhowLIB8/VMcLHhrKPKI/AAAAAAAAACQ/-j4hfkTupc4/w720-h480-no/19.jpg" alt=""><br>将蔬菜与鸡块翻炒均匀，加入生葱段、生蒜瓣，出锅装入铺好宽面条的大盘中。</p>
<p><img src="https://lh4.googleusercontent.com/-93DK5PZ6eA4/VMcLJib4tuI/AAAAAAAAADE/OdusHYzflvA/w720-h480-no/20.jpg" alt=""><br>最后，在鸡块上均匀的撒上孜然粉与香菜碎。</p>
<p><img src="https://lh4.googleusercontent.com/-vBWyRBZXX_4/VMcLIti5bbI/AAAAAAAAACs/ieV6FYyFKDU/w600-h800-no/21.jpg" alt=""><br>成品—-大盘鸡。 注意：想要同时做到鸡肉酥烂、土豆软糯，焖炖鸡块时一定要用小火慢炖。</p>
<p>—分享自校内网</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>新疆大盘鸡（5-6人份）<br>]]>
    
    </summary>
    
      <category term="中餐" scheme="http://www.ibartman.com/tags/%E4%B8%AD%E9%A4%90/"/>
    
      <category term="美食" scheme="http://www.ibartman.com/categories/%E7%BE%8E%E9%A3%9F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[建立ssh tunnel]]></title>
    <link href="http://www.ibartman.com/2015/01/29/%E5%BB%BA%E7%AB%8Bssh-tunnel/"/>
    <id>http://www.ibartman.com/2015/01/29/建立ssh-tunnel/</id>
    <published>2015-01-29T12:31:50.000Z</published>
    <updated>2015-07-06T22:11:29.000Z</updated>
    <content type="html"><![CDATA[<p>觉得解释很好的一篇文章:<br><a href="https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/" target="_blank" rel="external">https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/</a></p>
<p>ssh tunnel 可以被用来把未加密的traffic转变成加密的, 比如出差用宾馆的wifi就很不安全, 使用ssh tunnel会把你的traffic加密. 它还有一个用途是绕过防火墙.在这一点上,它的作用相当于一个简易的VPN.<br><a id="more"></a><br>ssh tunnel 是基于 port forwarding 的,这里用的 port forwarding 是指把数据包本地的地址和/或端口转换到另一个地址. 说白了,比如自己的电脑A想浏览facebook,但是facebook被防火墙屏蔽掉了.这时A如果可以连接到电脑B,而B处在防火墙之外.A 可以把对facebook的请求通过port forwording 转给B, B和facebook的服务器通信,然后再转发给A. 这样表面看来是A和B建立了一个加密的tunnel,实际上这个tunnel是用来转发A对facebook的请求.<br>基本命令是:(假设facebook主机的端口是80)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -L <span class="number">9001</span>:facebook.com:<span class="number">80</span> &lt;username@remotehostB&gt;</div></pre></td></tr></table></figure>

<p>这样, 在浏览器打入 <a href="http://localhost:9001" target="_blank" rel="external">http://localhost:9001</a>,本地对facebook的请求会被转发到主机B上.</p>
<ul>
<li>可以通过加密的ssh tunnel 传输各种数据,不仅仅是浏览网页.</li>
<li>ssh reverse tunnel是ssh tunnel的逆向,原理完全相同.</li>
<li>无论是说的ssh tunnel或是 ssh reverse tunnel 都需要对每个想浏览的网站做单独配置.(比如刚才例子的facebook), </li>
</ul>
<p>下面介绍一种动态的port forwarding 办法<br>命令行输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -D <span class="number">9001</span> &lt;username@remotehostB&gt;</div></pre></td></tr></table></figure>

<p>这时SSH 会创建一个SOCKS proxy 监听本地端口 9001,如果收到请求它会通过ssh tunnel转发到B. 这需要在浏览器里面配置SOCKS proxy 到 locoalhost:9001.<br>以下是如何在firefox中配置SOCKS 到 localhost的9001端口:<br>来源:<br><a href="https://calomel.org/firefox_ssh_proxy.html" target="_blank" rel="external">https://calomel.org/firefox_ssh_proxy.html</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Manual proxy configuration:</div><div class="line">SOCKS Proxy  <span class="number">127.0</span>.<span class="number">0.1</span>  Port <span class="number">9001</span></div><div class="line">check the box <span class="keyword">for</span> <span class="string">"SOCKS v5"</span></div></pre></td></tr></table></figure>

<p>建议同时设置DNS proxying thourgh SOCKS5, 因为如果防火墙进行DNS 投毒, 本地浏览器产生的DNS请求会得到错误的address.<br>在firefox里键入<code>about:config</code>,找到项目 <code>network.proxy.socks_remote_dns</code>,然后把它设置为true.</p>
<p>最后,在执行ssh 命令时,可以加入以下可选的flag:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -C2qTnN -D <span class="number">9001</span> &lt;username@remotehostB&gt;</div></pre></td></tr></table></figure>

<p>To summarize in order: </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-C: Compression</div><div class="line">-<span class="number">2</span>: SSH2 only</div><div class="line">-q: Quite</div><div class="line">-T: Force pseudo-tty allocation</div><div class="line">-n: Redirect stdin from /dev/null</div><div class="line">-N: Place the ssh client into <span class="string">"master"</span> mode <span class="keyword">for</span> connection sharing</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>觉得解释很好的一篇文章:<br><a href="https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/" target="_blank" rel="external">https://chamibuddhika.wordpress.com/2012/03/21/ssh-tunnelling-explained/</a></p>
<p>ssh tunnel 可以被用来把未加密的traffic转变成加密的, 比如出差用宾馆的wifi就很不安全, 使用ssh tunnel会把你的traffic加密. 它还有一个用途是绕过防火墙.在这一点上,它的作用相当于一个简易的VPN.<br>]]>
    
    </summary>
    
      <category term="ssh" scheme="http://www.ibartman.com/tags/ssh/"/>
    
      <category term="翻墙" scheme="http://www.ibartman.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="networking" scheme="http://www.ibartman.com/categories/networking/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何用git实现多台电脑用hexo发布文章]]></title>
    <link href="http://www.ibartman.com/2015/01/27/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%A4%9A%E5%8F%B0%E7%94%B5%E8%84%91%E7%AE%A1%E7%90%86hexo-%E6%BA%90%E6%96%87%E4%BB%B6/"/>
    <id>http://www.ibartman.com/2015/01/27/如何实现多台电脑管理hexo-源文件/</id>
    <published>2015-01-27T18:43:44.000Z</published>
    <updated>2015-07-07T03:04:39.000Z</updated>
    <content type="html"><![CDATA[<p>折腾hexo已经快一周了, 看了各种教程, 基本实现多台电脑同时编辑博客.</p>
<p>基本方法是使用两个git repo,一个管理site,一个管理src.<br>site就是 xxx.github.io ,存储的是网站的html,用repo1 管理. src 管理的是编辑 blog 时的源文件,用repo2 管理. (src 的gitignore 文件,加入 .deploy 和 public). 这样通过同步repo2,就能实现不同电脑编辑博客文件了.</p>
<p>但是昨天发现了一个问题, 虽然repo2 同步没问题,但是repo1的master branch 总是被重置.<br><a id="more"></a><br>具体的是,假设我有两台电脑 computer1, computer2. 他们各自管理自己repo1的版本<br>computer1 : ver1, ver2, ver3 …<br>computer2 : ver1`, ver2`, ver3` …<br>这样如果换电脑编辑,博客是能顺利更新,就是repo1 会被重新刷新成另一台电脑的版本. 而我想要的是保留所有的版本.</p>
<p>原因是.deploy 这个文件夹在不同的电脑没有同步.(本身是一个submodule)</p>
<p>我的解决办法:<br>(推荐事先配置好repo1,repo2 的ssh key)<br>repo1: xxx.github.io (site)<br>repo2: (blog src)</p>
<ul>
<li>假设已经在第一台电脑设置好两个repo, 当首次在另一台新的电脑上编辑博客时:</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone repo1</div><div class="line">git clone repo2</div><div class="line">mv repo1/ repo2/.deploy/</div></pre></td></tr></table></figure>

<ul>
<li><p>创建 fetch.sh 和 submit.sh,放在src的根目录</p>
</li>
<li><p>每次编辑之前运行 fetch.sh, (保证.deploy 和 src 获取最新版本)</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># File Name: fetch.sh</span></div><div class="line"><span class="shebang">#!/bin/bash</span></div><div class="line">git pull origin master</div><div class="line"><span class="built_in">cd</span> .deploy/</div><div class="line">git pull origin master</div></pre></td></tr></table></figure>

<ul>
<li>每次编辑之后运行 submit.sh, (运行deploy 然后push新的 src)</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># File Name: submit.sh</span></div><div class="line"><span class="shebang">#!/bin/bash</span></div><div class="line">hexo d -g</div><div class="line">git add .</div><div class="line">git commit -am <span class="string">"update blog source"</span></div><div class="line">git push origin master</div></pre></td></tr></table></figure>

<p>这样就解决了 site repo总是被重置的问题<br>PS: src 根目录的gitignore文件如下:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public/</div><div class="line">.deploy/</div><div class="line">.DS_Store</div><div class="line">db.json</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>折腾hexo已经快一周了, 看了各种教程, 基本实现多台电脑同时编辑博客.</p>
<p>基本方法是使用两个git repo,一个管理site,一个管理src.<br>site就是 xxx.github.io ,存储的是网站的html,用repo1 管理. src 管理的是编辑 blog 时的源文件,用repo2 管理. (src 的gitignore 文件,加入 .deploy 和 public). 这样通过同步repo2,就能实现不同电脑编辑博客文件了.</p>
<p>但是昨天发现了一个问题, 虽然repo2 同步没问题,但是repo1的master branch 总是被重置.<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://www.ibartman.com/tags/hexo/"/>
    
      <category term="git" scheme="http://www.ibartman.com/tags/git/"/>
    
      <category term="hexo" scheme="http://www.ibartman.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[add personal domains]]></title>
    <link href="http://www.ibartman.com/2015/01/24/add-personal-domains/"/>
    <id>http://www.ibartman.com/2015/01/24/add-personal-domains/</id>
    <published>2015-01-24T12:14:23.000Z</published>
    <updated>2015-01-27T08:34:39.000Z</updated>
    <content type="html"><![CDATA[<p>source:<br><a href="http://jingyan.baidu.com/article/36d6ed1f5356f31bcf488314.html" target="_blank" rel="external">http://jingyan.baidu.com/article/36d6ed1f5356f31bcf488314.html</a></p>
<ol>
<li>绑定自己的域名很简单，两步走。但是在绑定之前，你需要已经生成了你的github主页（如：你的用户名.github.io）。</li>
<li>创建一个CNAME文件（文件名叫CNAME，没有文件后缀），并上传至你的主页项目中。</li>
<li><p>前往你的DNS服务商新建一个CNAME解析至你的github page个人主页地址（如：xiangming.github.io）。DNSPod需要多加一个点，即xiangming.github.io.<br>(这里我是ping 我的xxx.github.io,得到ip地址,在DNS pod里面用的是这个ip地址)</p>
</li>
<li><p>等待更改生效，一般几分钟就可以使用你自定义的域名进行访问了。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>source:<br><a href="http://jingyan.baidu.com/article/36d6ed1f5356f31bcf488314.html" target="_blank" rel="external">http://jingyan.baidu.c]]>
    </summary>
    
      <category term="hexo" scheme="http://www.ibartman.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://www.ibartman.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[my_first_post]]></title>
    <link href="http://www.ibartman.com/2015/01/23/my_first_post/"/>
    <id>http://www.ibartman.com/2015/01/23/my_first_post/</id>
    <published>2015-01-23T07:43:05.000Z</published>
    <updated>2015-01-25T04:50:10.000Z</updated>
    <content type="html"><![CDATA[<p>之前一直想找个好的地方存放自己的笔记,在国外访问新浪博客的速度真是蛋疼.<br>昨天尝试了word press,很不错.但是最终还是决定使用github pages.<br>我的系统环境是Ubuntu 14.04<br>以下是一些有用的教程<br>基础:<br><a href="http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">http://cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/</a><br>Ubuntu下的:<br><a href="http://blog.maxwi.com/2014/02/22/first-post/" target="_blank" rel="external">http://blog.maxwi.com/2014/02/22/first-post/</a><br>最后,还要特别说明以下,我使用的hexo 2.8.3,出现了一个问题,安装主题之后不能正常显示,搜索很久才找到原因:(刚刚安装这个软件的童鞋可能也会遇到这个问题)<br>解决办法:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-renderer-stylus@<span class="number">0.1</span> --save</div></pre></td></tr></table></figure>

<p>来源:<br><a href="https://github.com/hexojs/hexo/issues/983" target="_blank" rel="external">https://github.com/hexojs/hexo/issues/983</a></p>
<p>接下来我会陆续迁移以前写的东西到这里.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前一直想找个好的地方存放自己的笔记,在国外访问新浪博客的速度真是蛋疼.<br>昨天尝试了word press,很不错.但是最终还是决定使用github pages.<br>我的系统环境是Ubuntu 14.04<br>以下是一些有用的教程<br>基础:<br><a hre]]>
    </summary>
    
      <category term="hexo" scheme="http://www.ibartman.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://www.ibartman.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解决chrome 在ubuntu 14.04 freeze的问题]]></title>
    <link href="http://www.ibartman.com/2014/10/07/%E8%A7%A3%E5%86%B3chrome%20%E5%9C%A8ubuntu%2014.04%20freeze%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://www.ibartman.com/2014/10/07/解决chrome 在ubuntu 14.04 freeze的问题/</id>
    <published>2014-10-07T13:07:00.000Z</published>
    <updated>2015-07-07T03:10:24.000Z</updated>
    <content type="html"><![CDATA[<p>以下转载一篇文章 , 禁用 加速解决freeze的问题<br><a id="more"></a></p>
<blockquote>
<p>Many of you probably already know about this but for the rest, here’s a quick tip that you might find useful. </p>
<p><strong>Quick tip</strong>: If you use Chrome or Chromium browsers and hardware acceleration is disabled for your graphics card, you can try to force it to get better video playback performance (for instance on YouTube) as well as support for features such as the 3D Earth view in the new &gt;Google Maps.</p>
<p>To check if your Chrome / Chromium browser uses hardware acceleration, open a new tab, type: “chrome://gpu” (without the quotes) and look under “Graphics Feature status” - all (or at least most of) the features should say “hardware accelerated”.</p>
<p>Here’s how it looks like on my laptop (Intel graphics) after enabling hardware acceleration:<br><img src="http://2.bp.blogspot.com/-C9It98guV9Y/Us_8J3IGPhI/AAAAAAAARCQ/jVRAN8QeDnI/s1600/chrome-hwaccel-enabled.jpg" alt=""></p>
<p>And here’s another screenshot with this page before enabling hardware acceleration:<br><img src="http://2.bp.blogspot.com/-kAzoBBi__qs/Us_8QKLkS4I/AAAAAAAARCY/clR-uKEP-oU/s1600/chrome-no-hwaccel.jpg" alt=""></p>
<p>To force Chrome / Chromium to use hardware acceleration, open a new tab, type “chrome://flags” (without quotes), search for “Override software rendering list”, enable it and restart Chrome / Chromium:<br><img src="http://3.bp.blogspot.com/-EkSyiBuAY54/Us_8bm5IV7I/AAAAAAAARCg/xcDDhk3X4ps/s1600/chrome-enable-hwaccel.jpg" alt=""></p>
<p>Try it out:<br>you should now be able to access the 3D Earth Google Maps feature (look for an “Earth” icon in the Google Maps Preview lower right corner);<br>try some 1080p full-screen YouTube HTML5 or Flash videos with and without hardware acceleration in Chrome - in my test using Intel graphics under Ubuntu, a full-screen YouTube video used twice as much CPU without hardware acceleration than when enabling hardware acceleration in Chrome;<br>try a Chrome experiment, with and without hardware acceleration. For me, THIS experiment didn’t work in Chrome (it said “Please wait while I load the model…” but the model didn’t load) until I forced hardware acceleration.</p>
<p>If you experience issues after this change, simply revert it: open “chrome://flags” (without quotes) in Chrome and disable it.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>以下转载一篇文章 , 禁用 加速解决freeze的问题<br>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://www.ibartman.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://www.ibartman.com/tags/Ubuntu/"/>
    
      <category term="Linux" scheme="http://www.ibartman.com/categories/Linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[vim 配色]]></title>
    <link href="http://www.ibartman.com/2014/04/16/vim%20%E9%85%8D%E8%89%B2/"/>
    <id>http://www.ibartman.com/2014/04/16/vim 配色/</id>
    <published>2014-04-16T12:53:00.000Z</published>
    <updated>2015-07-07T03:08:47.000Z</updated>
    <content type="html"><![CDATA[<p>最近发现vim的配色不能被 xterm，tmux很好的支持，许多网上的配置也不work，试了很多配置，发现tmux中的配置不是必须的，只需在bashrc 和vimrc中配置即可</p>
<p><a id="more"></a><br>.bashrc: </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">export</span> TERM=<span class="string">"xterm-256color"</span></div></pre></td></tr></table></figure>

<p>.vimrc: </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> term=screen-<span class="number">256</span>color</div></pre></td></tr></table></figure>

<p>(PS: should before your color scheme)</p>
<p>可能是tmux比较挑剔需要 screen-256color，所以在vim里写 set t_Co=256 不能保证在tmux里显示正常。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近发现vim的配色不能被 xterm，tmux很好的支持，许多网上的配置也不work，试了很多配置，发现tmux中的配置不是必须的，只需在bashrc 和vimrc中配置即可</p>
<p>]]>
    
    </summary>
    
      <category term="vim" scheme="http://www.ibartman.com/tags/vim/"/>
    
      <category term="colorscheme" scheme="http://www.ibartman.com/tags/colorscheme/"/>
    
      <category term="vim" scheme="http://www.ibartman.com/categories/vim/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HP V3704 刷BIOS 黑屏，解决办法]]></title>
    <link href="http://www.ibartman.com/2013/06/05/HP-V3704-%E5%88%B7BIOS-%E9%BB%91%E5%B1%8F%EF%BC%8C%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.ibartman.com/2013/06/05/HP-V3704-刷BIOS-黑屏，解决办法/</id>
    <published>2013-06-05T10:56:40.000Z</published>
    <updated>2015-07-07T03:13:09.000Z</updated>
    <content type="html"><![CDATA[<p>首先，转载一篇相关博文<br><a href="http://diybbs.zol.com.cn/1/34121_2331.html" target="_blank" rel="external">http://diybbs.zol.com.cn/1/34121_2331.html</a><br>目前刷BIOS激活WIN7很火,相信不少V3000本友遇到刷完BIOS黑屏(黑屏是指刷BIOS失败后开机后指示灯都亮就屏幕不亮,不是指因为HP主板问题黑屏)的现象,一定非常着急吧!<br>(ps:如果你对我这个教程持怀疑态度,那就请你不要往下看咯!未必我写这么久!写来骗大家?!!!)</p>
<p>教大家一个强刷BIOS恢复黑屏的办法:(本人在V3000系列成功,其他机型请慎重!!)</p>
<p><a id="more"></a></p>
<blockquote>
<p>1.首先大家先到HP官网上下载自己的BIOS , 准备一个U盘格式化成FAT32格式.<br>2.使用CRISDISK(在附件里面下载)制作强刷BIOS的U盘,打开CRISDISK4件夹里面的 WINCRIS.EXE,然后选择你的U盘点击Start<br>3.然后出现询问你是否删除U盘里面的数据重建恢复U盘,点击确定<br>4.等待后出现提示你U盘创建成功,点击确定.<br>5.然后提示你可以取下U盘,你取下U盘后再点击确定就可以关闭WINCRIS.EXE咯.<br>6.然后打开你的U盘看是不是多咯3个文件<br>7.就把你从惠普官网下载的BIOS(解压后提取里面WPH结尾的文件),把WPH结尾的文件改名为BIOS.WPH(大写字母),然后把BIOS.WPH复制到你的U盘替换到里面的文件.<br>8.把U盘插到你的黑屏的笔记本上,取下其他USB设备.<br>9.按住Win+B再按开机键,3个键按住不放,等到笔记本’滴’一声叫咯后放手,笔记本会一直滴滴滴的叫,等他叫完后自动关机.就说名强刷成功咯.最后取掉U盘开机,看你是不是成功咯?<br>10.祝你好运,顺便问下有给V3000加银片的朋友吗?你们温度好多?  我南方的  待机CPU 41 GPU 55 硬盘 45   完游戏都稳定在70内吧</p>
</blockquote>
<p>需要注意的：</p>
<ol>
<li><p>网上有许多其他方法，比如把解压后的fd文件改成 xxx.bin 或者 HPBIOS.ROM,这里对于我的V3704来说，是把xxx.WPH 改成 BIOS.WPH。</p>
</li>
<li><p>关于CRISDISK，我试了这篇博文的方法，在windows7下，创建后没有产生三个文件，失败。后来换用xp，顺利产生了三个文件。（如果CRISDISK 不能找到你的U盘，换用一个U盘试试）</p>
</li>
<li><p>关于进入盲刷模式，<br> 我的方法是：</p>
<pre><code> 1.拔掉电池，电源线 
 2.按住电源键不放，插入电源线，等一会（10秒左右）自己会开机
 3.开了之后会看见LED闪，但是U盘不闪，这时候按电源键强关机
 4.按住win+B不放，按电源键，听见滴一声后松开电源键，保持手在win+B上10秒左右
 5.这次LED闪且U盘闪，过一会LED不闪了，电脑自动关机
 6.拔下U盘，再次按电源键开机，此时屏幕已经点亮
</code></pre></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先，转载一篇相关博文<br><a href="http://diybbs.zol.com.cn/1/34121_2331.html" target="_blank" rel="external">http://diybbs.zol.com.cn/1/34121_2331.html</a><br>目前刷BIOS激活WIN7很火,相信不少V3000本友遇到刷完BIOS黑屏(黑屏是指刷BIOS失败后开机后指示灯都亮就屏幕不亮,不是指因为HP主板问题黑屏)的现象,一定非常着急吧!<br>(ps:如果你对我这个教程持怀疑态度,那就请你不要往下看咯!未必我写这么久!写来骗大家?!!!)</p>
<p>教大家一个强刷BIOS恢复黑屏的办法:(本人在V3000系列成功,其他机型请慎重!!)</p>
<p>]]>
    
    </summary>
    
      <category term="BIOS" scheme="http://www.ibartman.com/tags/BIOS/"/>
    
      <category term="Windows" scheme="http://www.ibartman.com/categories/Windows/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux 下设置两个主机通过router上网]]></title>
    <link href="http://www.ibartman.com/2012/09/29/Linux-%E4%B8%8B%E8%AE%BE%E7%BD%AE%E4%B8%A4%E4%B8%AA%E4%B8%BB%E6%9C%BA%E9%80%9A%E8%BF%87router%E4%B8%8A%E7%BD%91/"/>
    <id>http://www.ibartman.com/2012/09/29/Linux-下设置两个主机通过router上网/</id>
    <published>2012-09-29T17:45:51.000Z</published>
    <updated>2015-07-07T03:12:51.000Z</updated>
    <content type="html"><![CDATA[<p>搭建环境是virtual box，网络选择是internal network。并且 endpoint1 和router的NIC2用一个internal network。endpoint2和router的NIC3用一个internal network。3台主机使用系统ubuntu 10.04. 其中两台endpoint是一个interface，router有四个interface。<br><a id="more"></a><br><code>sudo vi /etc/network/interfaces</code><br>配置如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">endpoint <span class="number">1</span></div><div class="line">auto eth0</div><div class="line">iface eth0 inet static</div><div class="line">address <span class="number">10.1</span>.<span class="number">1.1</span></div><div class="line">netmask <span class="number">255.255</span>.<span class="number">255.0</span></div><div class="line">gw <span class="number">10.1</span>.<span class="number">1.2</span>              //gateway是router eth1的ip </div><div class="line">dns-nameserver <span class="number">8.8</span>.<span class="number">8.8</span></div><div class="line">dns-search local</div><div class="line">dns-domain local.domain </div><div class="line"> </div><div class="line">endpoint <span class="number">2</span></div><div class="line">auto eth0</div><div class="line">iface eth0 inet static</div><div class="line">address <span class="number">10.1</span>.<span class="number">2.1</span></div><div class="line">netmask <span class="number">255.255</span>.<span class="number">255.0</span></div><div class="line">gw <span class="number">10.1</span>.<span class="number">2.2</span>             //gateway是router eth2的ip</div><div class="line">dns-nameserver <span class="number">8.8</span>.<span class="number">8.8</span></div><div class="line">dns-search local</div><div class="line">dns-domain local.domain</div></pre></td></tr></table></figure>



<p>这样的话，没有router，两台机器是不能ping的，因为在不同的子网<br>router的配置如下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#NIC1</span></div><div class="line">auto eth0</div><div class="line">iface eth0 inet dhcp   //用于上网</div><div class="line">dns-nameserver <span class="number">8.8</span>.<span class="number">8.8</span></div><div class="line">dns-search local</div><div class="line">dns-domain local.domain</div><div class="line"> </div><div class="line"><span class="comment">#NIC2</span></div><div class="line">auto eth1</div><div class="line">iface eth1 inet static</div><div class="line">address <span class="number">10.1</span>.<span class="number">1.2</span></div><div class="line">netmask <span class="number">255.255</span>.<span class="number">255.0</span></div><div class="line"> </div><div class="line"><span class="comment">#NIC3</span></div><div class="line">auto eth2</div><div class="line">iface eth2 inet static</div><div class="line">address <span class="number">10.1</span>.<span class="number">2.2</span></div><div class="line">netmask <span class="number">255.255</span>.<span class="number">255.0</span></div><div class="line"> </div><div class="line"><span class="comment">#NIC4                        //这一个interface用来连接本地的user</span></div><div class="line">auto eth3</div><div class="line">iface eth3 inet static</div><div class="line">address <span class="number">10.1</span>.<span class="number">3.1</span></div><div class="line">netmask <span class="number">255.255</span>.<span class="number">255.0</span></div><div class="line">up route add -net x.x.x.x/<span class="number">24</span> gw xx.xx.xx.xx dev eth3  //x.x.x.x 是你想要连接的其他本地用户的endpoint的网络，xx.xx.xx.xx 是这个用户的 router ip，注意 xx.xx.xx.xx 必须与你自己的router ip在一个子网中</div></pre></td></tr></table></figure>


<p>这些配置之后，需要在router开启ip_forwarding<br><code>sudo su -</code><br><code>vi /etc/sysctl.conf</code> 把#net.ipv4.ip_forward=1 的注释去掉<br><code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</code></p>
<p>然后在router里开启NAT network address translation 网络地址解析<br><code>sudo vim /etc/rc.local</code></p>
<p>在 “exit 0” 之前加入以下两行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/sbin/iptables -P FORWARD ACCEPT</div><div class="line">/sbin/iptables --table nat -A POSTROUTING -o eth0 -j MASQUERADE</div></pre></td></tr></table></figure>


<p>至此，自己两台主机已经可以互相ping通，并且上网。</p>
<p>//需要注意的是，自己router的第四个interface，需要和本地其他用户的router的一个interface使用一个internal network。要实现这一点需要两个人同时在host的terminal运行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">VBoxManage setextradata &lt;VM_NAME&gt; VBoxInternal/Devices/&lt;ADAPTER_TYPE&gt;/&lt;ADAPTER_SLOT&gt;/LUN<span class="comment">#0/Config/RestrictAccess 0</span></div><div class="line">&lt;VM_NAME&gt;                       //自己router的名字</div><div class="line">&lt;ADAPTER_TYPE&gt;            // e1000</div><div class="line"> &lt;ADAPTER_SLOT&gt;          // 在virtualbox里的第几个slot，直接写数字（<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>）</div></pre></td></tr></table></figure>

<p>全部完成，have fun！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>搭建环境是virtual box，网络选择是internal network。并且 endpoint1 和router的NIC2用一个internal network。endpoint2和router的NIC3用一个internal network。3台主机使用系统ubuntu 10.04. 其中两台endpoint是一个interface，router有四个interface。<br>]]>
    
    </summary>
    
      <category term="网络配置" scheme="http://www.ibartman.com/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Linux" scheme="http://www.ibartman.com/tags/Linux/"/>
    
      <category term="networking" scheme="http://www.ibartman.com/categories/networking/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用CD 安装openBSD （Alpha, Mac G4, Sparc64)]]></title>
    <link href="http://www.ibartman.com/2012/03/15/%E7%94%A8CD-%E5%AE%89%E8%A3%85openBSD-%EF%BC%88Alpha-Mac-G4-Sparc64/"/>
    <id>http://www.ibartman.com/2012/03/15/用CD-安装openBSD-（Alpha-Mac-G4-Sparc64/</id>
    <published>2012-03-15T09:49:26.000Z</published>
    <updated>2015-07-07T03:12:31.000Z</updated>
    <content type="html"><![CDATA[<p>今天记录的是之前在这三个平台上安装openBSD的方法，没安装过的朋友，首先阅读中文版的图解安装指南。<br><a href="http://www.bsdlover.cn/html/8/n-8.html" target="_blank" rel="external">http://www.bsdlover.cn/html/8/n-8.html</a><br><a id="more"></a><br>二. 三个平台的特殊性<br>首先需要在ftp://mirror.esc7.net/pub/OpenBSD/5.0/ 选择对应平台的镜像刻录成盘，镜像名字一般为install50.iso ，大小约200M。</p>
<ol>
<li><p>对于Alpha，开机按F2,或者ctrl+B，进入shell。然后输入 show device，查询设备名，一般第一项是硬盘，第二项是光盘，大概是DKA0 或者是 DKBO。这时输入 boot xxx（你查询到的名称），从光盘启动。<br>安装完成之后会提示reboot，这之后需要手动切换启动项为硬盘，不然会无限从光盘启动提示安装。<br>（英文安装指南：ftp://mirror.esc7.net/pub/OpenBSD/5.0/alpha/INSTALL.alpha）</p>
</li>
<li><p>Mac G4 cube，插入光盘后，需要command + option+ O + F，进入openfirmware。（专用键盘）<br>输入 boot cd:,ofwboot /5.0/macppc/bsd.rd 从光盘启动。<br>安装完成之后，需要再次进入openfirmware， 键入 boot hd:,ofwboot /bsd 从硬盘启动openBSD，以后每次重启都要运行这个指令。<br>（英文安装指南：ftp://mirror.esc7.net/pub/OpenBSD/5.0/macppc/INSTALL.macppc）</p>
</li>
<li><p>Sun sparc64， 需要键入stop+A（专用键盘），然后输入 boot cdroom<br>（英文安装指南：ftp://mirror.esc7.net/pub/OpenBSD/5.0/sparc64/INSTALL.sparc64）</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天记录的是之前在这三个平台上安装openBSD的方法，没安装过的朋友，首先阅读中文版的图解安装指南。<br><a href="http://www.bsdlover.cn/html/8/n-8.html" target="_blank" rel="external">http://www.bsdlover.cn/html/8/n-8.html</a><br>]]>
    
    </summary>
    
      <category term="installation" scheme="http://www.ibartman.com/tags/installation/"/>
    
      <category term="BSD" scheme="http://www.ibartman.com/categories/BSD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Install OpenBSD on Octane (sgi)]]></title>
    <link href="http://www.ibartman.com/2012/03/06/Install-OpenBSD-on-Octane-sgi/"/>
    <id>http://www.ibartman.com/2012/03/06/Install-OpenBSD-on-Octane-sgi/</id>
    <published>2012-03-06T18:20:52.000Z</published>
    <updated>2015-07-07T03:12:13.000Z</updated>
    <content type="html"><![CDATA[<p>这一篇虽然讲的是具体在Octane上装OpenBSD, 比较细节，但是中间涉及到boot from DHCPD server，建立tftpd server 还是很有用的。<br>首先，由于Octane 没有光驱，usb，只能boot from DHCPD or BOOTP server . 建立 DHCPD server的过程如下：</p>
<p><a href="http://www.linuxtopia.org/online_books/system_administration_books/ubuntu_starter_guide/ch07s04.html" target="_blank" rel="external">http://www.linuxtopia.org/online_books/system_administration_books/ubuntu_starter_guide/ch07s04.html</a></p>
<ul>
<li>What is a DHCP Server?<br>A Dynamic Host Configuration Protocol (DHCP) server dynamically assigns IP addresses and other network setting for a given network to other networked PCs that ask. This simplifies network administration and makes connecting new PCs to a network much easier.</li>
<li>How do I install a DHCP Server?<br>For these examples we are using “eth0” and the following:<br>IP address range: 192.168.0.100 to 192.168.0.200<br>Subnet Mask: 255.255.255.0<br>DNS Servers: 202.188.0.133, 202.188.1.5<br>Domains: tm.net.my<br>Gateway Address: 192.168.0.1<a id="more"></a>
</li>
</ul>
<ol>
<li><p>Read How do I add Universe and Multiverse?</p>
</li>
<li><p>Install the dhcp3-server package with Synaptic(See How do I use Synaptic to install packages?)<br>Networking &gt; dhcp3-server</p>
</li>
<li><p> <code>sudo cp /etc/default/dhcp3-server /etc/default/dhcp3-server_backup</code><br> <code>sudo gedit /etc/default/dhcp3-server</code></p>
</li>
<li><p>Find this line</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">... INTERFACES=<span class="string">""</span></div></pre></td></tr></table></figure>

<p>Replace with the following line</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INTERFACES=<span class="string">"eth0"</span></div></pre></td></tr></table></figure>

<ul>
<li><p>Save the edited file</p>
</li>
<li><p><code>sudo cp /etc/dhcp3/dhcpd.conf /etc/dhcp3/dhcpd.conf_backup</code><br>  <code>sudo gedit /etc/dhcp3/dhcpd.conf</code></p>
</li>
</ul>
<p>Find this section</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line">    <span class="comment"># option definitions common to all supported networks...</span></div><div class="line">    option domain-name <span class="string">"example.org"</span>;</div><div class="line">    option domain-name-servers ns1.example.org, ns2.example.org;</div><div class="line">   </div><div class="line">    default-lease-time <span class="number">600</span>;</div><div class="line">    max-lease-time <span class="number">7200</span>;</div><div class="line">...</div></pre></td></tr></table></figure>

<p>Replace with the following lines</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># option definitions common to all supported networks...</span></div><div class="line"><span class="comment">#option domain-name "example.org";</span></div><div class="line"><span class="comment">#option domain-name-servers ns1.example.org, ns2.example.org;</span></div><div class="line"><span class="comment">#default-lease-time 600;</span></div><div class="line"><span class="comment">#max-lease-time 7200;</span></div></pre></td></tr></table></figure>

<p>Find this section</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">...</div><div class="line"><span class="comment"># A slightly different configuration for an internal subnet.</span></div><div class="line"><span class="comment">#subnet 10.5.5.0 netmask 255.255.255.224 {</span></div><div class="line"><span class="comment">#  range 10.5.5.26 10.5.5.30;</span></div><div class="line"><span class="comment">#  option domain-name-servers ns1.internal.example.org;</span></div><div class="line"><span class="comment">#  option domain-name "internal.example.org";</span></div><div class="line"><span class="comment">#  option routers 10.5.5.1;</span></div><div class="line"><span class="comment">#  option broadcast-address 10.5.5.31;</span></div><div class="line"><span class="comment">#  default-lease-time 600;</span></div><div class="line"><span class="comment">#  max-lease-time 7200;</span></div><div class="line"><span class="comment">#}</span></div><div class="line">...</div></pre></td></tr></table></figure>

<p>Replace with the following lines</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># A slightly different configuration for an internal subnet.</span></div><div class="line">subnet <span class="number">192.168</span>.<span class="number">0.0</span> netmask <span class="number">255.255</span>.<span class="number">255.0</span> {</div><div class="line">range <span class="number">192.168</span>.<span class="number">0.100</span> <span class="number">192.168</span>.<span class="number">0.200</span>;</div><div class="line">option domain-name-servers <span class="number">202.188</span>.<span class="number">0.133</span>, <span class="number">202.188</span>.<span class="number">1.5</span>;</div><div class="line">option domain-name <span class="string">"tm.net.my"</span>;</div><div class="line">option routers <span class="number">192.168</span>.<span class="number">0.1</span>;</div><div class="line">option broadcast-address <span class="number">192.168</span>.<span class="number">0.255</span>;</div><div class="line">default-lease-time <span class="number">600</span>;</div><div class="line">max-lease-time <span class="number">7200</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<p>Save the edited file (sample/dhcpd.conf_installdhcpserver)<br><code>sudo /etc/init.d/dhcp3-server restart</code></p>
<p>这里，我没有完全用他一样的设置，domain name server 和domain name是我自己的。另外，但是这些设置还是不够的<br>还需要指定client的IP 和ethernet。查询octane的ethernet 用printenv eaddr。下面是我的设置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> host octane {</div><div class="line">  hardware ethernet <span class="number">08</span>:<span class="number">00</span>:<span class="number">69</span>:<span class="number">0</span>b:f8:d3;</div><div class="line">  fixed-address <span class="number">192.168</span>.<span class="number">0.111</span>;</div><div class="line">  filename <span class="string">"/tftpboot/bsd.rd.IP30"</span>;</div><div class="line">  server-name <span class="string">"lassen"</span>;</div><div class="line">}</div><div class="line">subnet <span class="number">192.168</span>.<span class="number">0.0</span> netmask <span class="number">255.255</span>.<span class="number">255.0</span> {</div><div class="line">  range <span class="number">192.168</span>.<span class="number">0.100</span> <span class="number">192.168</span>.<span class="number">0.200</span>;</div><div class="line">  option domain-name-servers <span class="number">64.106</span>.<span class="number">46.33</span>;</div><div class="line">  option domain-name <span class="string">"lassen"</span>;</div><div class="line">  option routers <span class="number">192.168</span>.<span class="number">0.1</span>;</div><div class="line">  option broadcast-address <span class="number">192.168</span>.<span class="number">0.255</span>;</div><div class="line">  default-lease-time <span class="number">600</span>;</div><div class="line">  max-lease-time <span class="number">7200</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<p>二。建立tftpd server：<a href="http://www.davidsudjiman.info/2006/03/27/installing-and-setting-tftpd-in-ubuntu/" target="_blank" rel="external">http://www.davidsudjiman.info/2006/03/27/installing-and-setting-tftpd-in-ubuntu/</a><br>在同一台电脑，这个目的是为了共享文件，</p>
<ol>
<li>Install tftpd and related packages.<br>$ sudo apt-get install xinetd tftpd tftp</li>
<li>Create /etc/xinetd.d/tftp and put this entry:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">service tftp</div><div class="line">{</div><div class="line">protocol        = udp</div><div class="line">port            = <span class="number">69</span></div><div class="line">socket_<span class="built_in">type</span>     = dgram</div><div class="line">wait            = yes</div><div class="line">user            = nobody</div><div class="line">server          = /usr/sbin/in.tftpd</div><div class="line">server_args     = /tftpboot</div><div class="line">disable         = no</div><div class="line">}</div></pre></td></tr></table></figure>

<ol>
<li><p>Make /tftpboot directory<br>$ <code>sudo mkdir /tftpboot</code><br>$ <code>sudo chmod -R 777 /tftpboot</code><br>$ <code>sudo chown -R nobody /tftpboot</code></p>
</li>
<li><p>Restart tftpd through xinetd<br>$ <code>sudo /etc/init.d/xinetd restart</code></p>
</li>
</ol>
<p>三. 准备安装。把bsd.rd.IP30 文件放到tftpboot目录下，然后 chmod -R 777 bad.rd.IP30，并在dhcpd.conf里指定文件bsd.rd.IP30的路径。</p>
<p>四. server端已经设定完毕，现在在octane上键入 bootp（）/bsd.rd.IP30 由于之前在server端已经指定了该文件的路径，并且降低了访问权限，现在就可以开始安装了。</p>
<p>五. 具体的安装过程，这里就不写了，和从cd安装是一样的，但是注意的是，网络环境的设定一定要正确，不然稍后是无法从http或者ftp上install的。</p>
<p>六. 当开始询问从http还是ftp上安装时，任何一种都OK，只要之前的网络环境设置正确。</p>
<p>Install <wbr>OpenBSD <wbr>on <wbr>Octane <wbr>(sgi)<br>有两点要补充，第一一定要选择可用的ftp或者http网址，具体的在openBSD官网上能看到，要自己亲自上一下，因为有些已经down掉了，另外，如果没有设好dns的话，server就得写IP了，因为域名是无法识别的。</p>
<p>七. 到此openBSD就可以顺利安装完了，装完之后由于sgi/octane的特殊性，reboot之后还要进行下设置。在console 里运行 setenv OSLoader boot。另外，如果printenv 输出的OSLoadFilename 是unix，把他改为 /bsd.<br>最后，运行 boot /bsd</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这一篇虽然讲的是具体在Octane上装OpenBSD, 比较细节，但是中间涉及到boot from DHCPD server，建立tftpd server 还是很有用的。<br>首先，由于Octane 没有光驱，usb，只能boot from DHCPD or BOOTP server . 建立 DHCPD server的过程如下：</p>
<p><a href="http://www.linuxtopia.org/online_books/system_administration_books/ubuntu_starter_guide/ch07s04.html" target="_blank" rel="external">http://www.linuxtopia.org/online_books/system_administration_books/ubuntu_starter_guide/ch07s04.html</a></p>
<ul>
<li>What is a DHCP Server?<br>A Dynamic Host Configuration Protocol (DHCP) server dynamically assigns IP addresses and other network setting for a given network to other networked PCs that ask. This simplifies network administration and makes connecting new PCs to a network much easier.</li>
<li>How do I install a DHCP Server?<br>For these examples we are using “eth0” and the following:<br>IP address range: 192.168.0.100 to 192.168.0.200<br>Subnet Mask: 255.255.255.0<br>DNS Servers: 202.188.0.133, 202.188.1.5<br>Domains: tm.net.my<br>Gateway Address: 192.168.0.1]]>
    
    </summary>
    
      <category term="installation" scheme="http://www.ibartman.com/tags/installation/"/>
    
      <category term="BSD" scheme="http://www.ibartman.com/categories/BSD/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于多次创建联想恢复介质]]></title>
    <link href="http://www.ibartman.com/2012/03/02/%E5%85%B3%E4%BA%8E%E5%A4%9A%E6%AC%A1%E5%88%9B%E5%BB%BA%E8%81%94%E6%83%B3%E6%81%A2%E5%A4%8D%E4%BB%8B%E8%B4%A8/"/>
    <id>http://www.ibartman.com/2012/03/02/关于多次创建联想恢复介质/</id>
    <published>2012-03-02T19:55:18.000Z</published>
    <updated>2015-07-07T03:11:56.000Z</updated>
    <content type="html"><![CDATA[<p>最近系统这块接触的比较多，系统的东西又杂，经常是做了就忘。而且自己不懂的时候，经常是中英文google交替搜索关键词，因为中文的网站好处是看的比较快，英文的网站信息比较全，如果把每次做的写成log，这样后人会少走一些弯路，自己将来也方便查阅。</p>
<p> 首先声明，这篇文章仅是为了学习方便首次创建恢复介质失败，又想学习技巧的用户。<br> <a id="more"></a></p>
<p>  我的是联想 thinkpad-x220，买完之后直接把原厂的系统格掉了，DIY之后发现蓝键失效。于是用朋友的恢复盘恢复回来，但是创建恢复盘提示不能第二次创建。于是google了一下<br>  原帖地址 <a href="http://thinkbbs.zol.com.cn/39/32108_388558.html" target="_blank" rel="external">http://thinkbbs.zol.com.cn/39/32108_388558.html</a></p>
<blockquote>
<p>这里说的恢复介质是指双击Q盘弹出的“创建恢复介质”的恢复介质，即通过此介质可以恢复系统至出厂状态。<br>拿到后第一件事要备份一下原厂的系统，于是打开Q盘，成功创建了一次恢复介质到移动硬盘。<br>但由于这次是抱着试一试的态度，而且想在移动硬盘上重新分个小一点的区来保存恢复介质。于是把移动硬盘给重新分了区，保存的恢复介质的那个区自然被格式化了。<br>然后我就想再次创建恢复介质，这时问题就来了，由于Windows许可证的限制，只允许我创建一次，杯具了。。。<br>其实操作起来相当简单~<br>第一步，设置文件夹选项，Win7是在菜单栏那块儿“组织”选项里的“文件夹和搜索选项”，将“隐藏受保护的操作系统文件”前的勾去掉，并选择“显示隐藏的文件、文件夹和驱动器”这一项<br>第二步，打开我的电脑，找到Q盘，右键点击，选择“打开自动播放”<br>第三步，此时会跳出自动播放的Q盘，选择“打开文件夹以查看文件”，这时候你就会看到Q盘里的内容，这时候你打开FactoryRecovery文件夹，在这个文件夹里你会看到一个service_done.ini的文件，打开一看，有这么一句话：[SERVICE]  DONE=1，哈哈，终于找到了罪魁祸首！你再仔细一看，会发现这个文件创建的日期和其他的不同！这是当然了，因为这个文件是在你第一次成功创建恢复介质之后自动创建的，也正是因为有了这个文件，才会在你第二次尝试制作恢复介质的时候限制你。<br>最后一步，将service_done.ini删除，大功告成。<br>这时候，你再去双击Q盘，就可以顺利的创建恢复介质了，于是我就赶紧在移动硬盘里创建了一份，结果当然是成功了~</p>
</blockquote>
<p>  问题是按照这种方法去做之后，并不能100%保证创建成功，在创建过程中，会询问创建启动介质还是数据介质，如果勾选数据介质，就会提示错误，然后退出创建。<br>  <img src="https://lh4.googleusercontent.com/-F4TAJMkuuFY/VMa-fH4maMI/AAAAAAAAAAk/C6kU_apBcVw/w490-h278-no/4.png" alt=""><br>  于是又google了一下，发现需要在Factory Recovery 目录下创建cdrivebackup.wim 和Qdrivebackup.wim两个文件，这样之后，就不会出现错误了。<br>  <img src="https://lh5.googleusercontent.com/-W4TgN9os1nk/VMa-hc4cYyI/AAAAAAAAAAs/gEJlKOA1kYc/w624-h286-no/5.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近系统这块接触的比较多，系统的东西又杂，经常是做了就忘。而且自己不懂的时候，经常是中英文google交替搜索关键词，因为中文的网站好处是看的比较快，英文的网站信息比较全，如果把每次做的写成log，这样后人会少走一些弯路，自己将来也方便查阅。</p>
<p> 首先声明，这篇文章仅是为了学习方便首次创建恢复介质失败，又想学习技巧的用户。<br> ]]>
    
    </summary>
    
      <category term="系统恢复" scheme="http://www.ibartman.com/tags/%E7%B3%BB%E7%BB%9F%E6%81%A2%E5%A4%8D/"/>
    
      <category term="Windows" scheme="http://www.ibartman.com/categories/Windows/"/>
    
  </entry>
  
</feed>
